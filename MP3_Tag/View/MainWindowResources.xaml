<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:viewModel="clr-namespace:MP3_Tag.ViewModel" xmlns:converter="clr-namespace:MP3_Tag.Converter">

    <!-- Converter -->
    <converter:Mp3CollectionToBooleanConverter x:Key="Mp3CollectionToBooleanConverter" />
    <converter:ImageToBitmapImageConverter x:Key="ImageToBitmapImageConverter" />

    <!-- DataTemplate: MenuViewModel-->
    <DataTemplate DataType="{x:Type viewModel:ImageCommandViewModel}">
        <Button Command="{Binding Path=RelayCommand}">
            <Image Source="{Binding Path=Image, Converter={StaticResource ImageToBitmapImageConverter}}" Height="25"
                   Width="25" />
            <Button.ToolTip>
                <TextBlock Text="{Binding Path=DisplayName}" />
            </Button.ToolTip>
        </Button>
    </DataTemplate>

    <!-- ContextMenu for DataGrid -->
    <ContextMenu x:Key="dataGridContextMenu"
                 DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}"
                 ItemsSource="{Binding Path=Commands}">
        <ContextMenu.ItemTemplate>
            <DataTemplate>
                <TextBlock Text="{Binding Path=DisplayName}" />
            </DataTemplate>
        </ContextMenu.ItemTemplate>
        <ContextMenu.ItemContainerStyle>
            <Style TargetType="MenuItem">
                <Setter Property="Command" Value="{Binding Path=RelayCommand}" />
            </Style>
        </ContextMenu.ItemContainerStyle>
    </ContextMenu>

    <!-- Main border style-->
    <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <!-- Main header style-->
    <Style x:Key="MainHeaderStyle" TargetType="{x:Type HeaderedContentControl}">
        <!-- Defines the appearence of the header -->
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Background="DarkOrange" BorderBrush="LightGray" BorderThickness="1" CornerRadius="5"
                            Margin="4" SnapsToDevicePixels="True">
                        <TextBlock FontSize="14" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center"
                                   Text="{TemplateBinding Content}" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <!-- Defines the appearence of the content -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <ContentPresenter DockPanel.Dock="Top" ContentSource="Header"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}" />
                        <ContentPresenter ContentSource="Content" ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DataGridTemplate - Column + Row styles -->
    <Style x:Key="NonTabCellDataGridStyle" BasedOn="{StaticResource {x:Type DataGridCell}}"
           TargetType="{x:Type DataGridCell}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="DarkOrange" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TabCellDataGridStyle" BasedOn="{StaticResource {x:Type DataGridCell}}"
           TargetType="{x:Type DataGridCell}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="DarkOrange" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RowDataGridStyle" BasedOn="{StaticResource {x:Type DataGridRow}}" TargetType="{x:Type DataGridRow}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="SandyBrown" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="DarkOrange" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="ContextMenu" Value="{StaticResource dataGridContextMenu}" />
    </Style>

</ResourceDictionary>